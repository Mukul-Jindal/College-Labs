// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

contract balanceManager{
    address public owner;
    uint public balance;

    constructor() {
        owner = msg.sender;
        balance = 0;
    }

    modifier onlyOwner(){
        require(msg.sender == owner, "Only owner can call this function");
        _;
    }

    function deposit() external payable {
        require(msg.value > 0, "Deposit amount must be greater than zero");
        balance += msg.value;
    }

    function withdraw(uint amount) external onlyOwner {
        require(amount > 0, "Withdrawl amount must be greater than zero");
        require(amount <= balance, "Isufficient Balance");
        balance -= amount;
        payable(msg.sender).transfer(amount);
    }

    function reset() external onlyOwner{
        require(balance > 0, "Balance is already zero");
        balance = 0;
    }

    function getContractBalance() external view returns (uint){
        return balance;
    }
}